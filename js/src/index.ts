// AUTO-GENERATED FILE – DO NOT EDIT MANUALLY
// Generated from genres.json

/**
 * Type that distinguishes if a genre entry is a parent genre or a subgenre.
 */
export type GenreType = "genre" | "subgenre";

/**
 * Represents a genre or subgenre entry with metadata and conversion to chain-compatible enum.
 */
export interface UnifiedGenreEntry {
  id: string;
  name: string;
  type: GenreType;
  parentId?: string;
  toNativeType(): string;
}

/**
 * Flat list of all music genres and subgenres.
 */
export const allGenresUnified: UnifiedGenreEntry[] = [
  {
    id: "rock",
    name: "Rock",
    type: "genre",
    toNativeType: () => "Rock",
  },
  {
    id: "hard_rock",
    name: "Hard Rock",
    type: "subgenre",
    parentId: "rock",
    toNativeType: () => "HardRock",
  },
  {
    id: "classic_rock",
    name: "Classic Rock",
    type: "subgenre",
    parentId: "rock",
    toNativeType: () => "ClassicRock",
  },
  {
    id: "punk_rock",
    name: "Punk Rock",
    type: "subgenre",
    parentId: "rock",
    toNativeType: () => "PunkRock",
  },
  {
    id: "alternative_rock",
    name: "Alternative Rock",
    type: "subgenre",
    parentId: "rock",
    toNativeType: () => "AlternativeRock",
  },
  {
    id: "indie_rock",
    name: "Indie Rock",
    type: "subgenre",
    parentId: "rock",
    toNativeType: () => "IndieRock",
  },
  {
    id: "progressive_rock",
    name: "Progressive Rock",
    type: "subgenre",
    parentId: "rock",
    toNativeType: () => "ProgressiveRock",
  },
  {
    id: "garage_rock",
    name: "Garage Rock",
    type: "subgenre",
    parentId: "rock",
    toNativeType: () => "GarageRock",
  },
  {
    id: "post_rock",
    name: "Post‑Rock",
    type: "subgenre",
    parentId: "rock",
    toNativeType: () => "PostRock",
  },
  {
    id: "math_rock",
    name: "Math Rock",
    type: "subgenre",
    parentId: "rock",
    toNativeType: () => "MathRock",
  },
  {
    id: "grunge",
    name: "Grunge",
    type: "subgenre",
    parentId: "rock",
    toNativeType: () => "Grunge",
  },
  {
    id: "pop",
    name: "Pop",
    type: "genre",
    toNativeType: () => "Pop",
  },
  {
    id: "dance_pop",
    name: "Dance Pop",
    type: "subgenre",
    parentId: "pop",
    toNativeType: () => "DancePop",
  },
  {
    id: "electropop",
    name: "Electropop",
    type: "subgenre",
    parentId: "pop",
    toNativeType: () => "Electropop",
  },
  {
    id: "synthpop",
    name: "Synth‑pop",
    type: "subgenre",
    parentId: "pop",
    toNativeType: () => "Synthpop",
  },
  {
    id: "teen_pop",
    name: "Teen Pop",
    type: "subgenre",
    parentId: "pop",
    toNativeType: () => "TeenPop",
  },
  {
    id: "k_pop",
    name: "K‑Pop",
    type: "subgenre",
    parentId: "pop",
    toNativeType: () => "KPop",
  },
  {
    id: "baroque_pop",
    name: "Baroque Pop",
    type: "subgenre",
    parentId: "pop",
    toNativeType: () => "BaroquePop",
  },
  {
    id: "art_pop",
    name: "Art Pop",
    type: "subgenre",
    parentId: "pop",
    toNativeType: () => "ArtPop",
  },
  {
    id: "hip_hop",
    name: "Hip Hop / Rap",
    type: "genre",
    toNativeType: () => "HipHop",
  },
  {
    id: "trap",
    name: "Trap",
    type: "subgenre",
    parentId: "hip_hop",
    toNativeType: () => "Trap",
  },
  {
    id: "boom_bap",
    name: "Boom Bap",
    type: "subgenre",
    parentId: "hip_hop",
    toNativeType: () => "BoomBap",
  },
  {
    id: "gangsta_rap",
    name: "Gangsta Rap",
    type: "subgenre",
    parentId: "hip_hop",
    toNativeType: () => "GangstaRap",
  },
  {
    id: "conscious_rap",
    name: "Conscious Rap",
    type: "subgenre",
    parentId: "hip_hop",
    toNativeType: () => "ConsciousRap",
  },
  {
    id: "lofi_hip_hop",
    name: "Lo‑fi Hip Hop",
    type: "subgenre",
    parentId: "hip_hop",
    toNativeType: () => "LofiHipHop",
  },
  {
    id: "drill",
    name: "Drill",
    type: "subgenre",
    parentId: "hip_hop",
    toNativeType: () => "Drill",
  },
  {
    id: "cloud_rap",
    name: "Cloud Rap",
    type: "subgenre",
    parentId: "hip_hop",
    toNativeType: () => "CloudRap",
  },
  {
    id: "experimental_hip_hop",
    name: "Experimental Hip Hop",
    type: "subgenre",
    parentId: "hip_hop",
    toNativeType: () => "ExperimentalHipHop",
  },
  {
    id: "electronic",
    name: "Electronic",
    type: "genre",
    toNativeType: () => "Electronic",
  },
  {
    id: "house",
    name: "House",
    type: "subgenre",
    parentId: "electronic",
    toNativeType: () => "House",
  },
  {
    id: "techno",
    name: "Techno",
    type: "subgenre",
    parentId: "electronic",
    toNativeType: () => "Techno",
  },
  {
    id: "trance",
    name: "Trance",
    type: "subgenre",
    parentId: "electronic",
    toNativeType: () => "Trance",
  },
  {
    id: "dubstep",
    name: "Dubstep",
    type: "subgenre",
    parentId: "electronic",
    toNativeType: () => "Dubstep",
  },
  {
    id: "drum_and_bass",
    name: "Drum & Bass",
    type: "subgenre",
    parentId: "electronic",
    toNativeType: () => "DrumAndBass",
  },
  {
    id: "electronic_ambient",
    name: "Ambient",
    type: "subgenre",
    parentId: "electronic",
    toNativeType: () => "ElectronicAmbient",
  },
  {
    id: "idm",
    name: "IDM",
    type: "subgenre",
    parentId: "electronic",
    toNativeType: () => "Idm",
  },
  {
    id: "electro",
    name: "Electro",
    type: "subgenre",
    parentId: "electronic",
    toNativeType: () => "Electro",
  },
  {
    id: "downtempo",
    name: "Downtempo",
    type: "subgenre",
    parentId: "electronic",
    toNativeType: () => "Downtempo",
  },
  {
    id: "breakbeat",
    name: "Breakbeat",
    type: "subgenre",
    parentId: "electronic",
    toNativeType: () => "Breakbeat",
  },
  {
    id: "hardstyle",
    name: "Hardstyle",
    type: "subgenre",
    parentId: "electronic",
    toNativeType: () => "Hardstyle",
  },
  {
    id: "triphop",
    name: "Trip‑Hop",
    type: "subgenre",
    parentId: "electronic",
    toNativeType: () => "Triphop",
  },
  {
    id: "r_and_b",
    name: "R&B / Soul",
    type: "genre",
    toNativeType: () => "RAndB",
  },
  {
    id: "contemporary_r_and_b",
    name: "Contemporary R&B",
    type: "subgenre",
    parentId: "r_and_b",
    toNativeType: () => "ContemporaryRAndB",
  },
  {
    id: "neo_soul",
    name: "Neo‑Soul",
    type: "subgenre",
    parentId: "r_and_b",
    toNativeType: () => "NeoSoul",
  },
  {
    id: "motown",
    name: "Motown",
    type: "subgenre",
    parentId: "r_and_b",
    toNativeType: () => "Motown",
  },
  {
    id: "funk",
    name: "Funk",
    type: "subgenre",
    parentId: "r_and_b",
    toNativeType: () => "Funk",
  },
  {
    id: "quiet_storm",
    name: "Quiet Storm",
    type: "subgenre",
    parentId: "r_and_b",
    toNativeType: () => "QuietStorm",
  },
  {
    id: "blue_eyed_soul",
    name: "Blue‑Eyed Soul",
    type: "subgenre",
    parentId: "r_and_b",
    toNativeType: () => "BlueEyedSoul",
  },
  {
    id: "jazz",
    name: "Jazz",
    type: "genre",
    toNativeType: () => "Jazz",
  },
  {
    id: "bebop",
    name: "Bebop",
    type: "subgenre",
    parentId: "jazz",
    toNativeType: () => "Bebop",
  },
  {
    id: "swing",
    name: "Swing",
    type: "subgenre",
    parentId: "jazz",
    toNativeType: () => "Swing",
  },
  {
    id: "cool_jazz",
    name: "Cool Jazz",
    type: "subgenre",
    parentId: "jazz",
    toNativeType: () => "CoolJazz",
  },
  {
    id: "fusion",
    name: "Jazz Fusion",
    type: "subgenre",
    parentId: "jazz",
    toNativeType: () => "Fusion",
  },
  {
    id: "acid_jazz",
    name: "Acid Jazz",
    type: "subgenre",
    parentId: "jazz",
    toNativeType: () => "AcidJazz",
  },
  {
    id: "latin_jazz",
    name: "Latin Jazz",
    type: "subgenre",
    parentId: "jazz",
    toNativeType: () => "LatinJazz",
  },
  {
    id: "vocal_jazz",
    name: "Vocal Jazz",
    type: "subgenre",
    parentId: "jazz",
    toNativeType: () => "VocalJazz",
  },
  {
    id: "classical",
    name: "Classical",
    type: "genre",
    toNativeType: () => "Classical",
  },
  {
    id: "baroque",
    name: "Baroque",
    type: "subgenre",
    parentId: "classical",
    toNativeType: () => "Baroque",
  },
  {
    id: "classical_period",
    name: "Classical Period",
    type: "subgenre",
    parentId: "classical",
    toNativeType: () => "ClassicalPeriod",
  },
  {
    id: "romantic",
    name: "Romantic",
    type: "subgenre",
    parentId: "classical",
    toNativeType: () => "Romantic",
  },
  {
    id: "contemporary_classical",
    name: "Contemporary Classical",
    type: "subgenre",
    parentId: "classical",
    toNativeType: () => "ContemporaryClassical",
  },
  {
    id: "opera",
    name: "Opera",
    type: "subgenre",
    parentId: "classical",
    toNativeType: () => "Opera",
  },
  {
    id: "chamber_music",
    name: "Chamber Music",
    type: "subgenre",
    parentId: "classical",
    toNativeType: () => "ChamberMusic",
  },
  {
    id: "electroacoustic",
    name: "Electroacoustic",
    type: "subgenre",
    parentId: "classical",
    toNativeType: () => "Electroacoustic",
  },
  {
    id: "country",
    name: "Country",
    type: "genre",
    toNativeType: () => "Country",
  },
  {
    id: "bluegrass",
    name: "Bluegrass",
    type: "subgenre",
    parentId: "country",
    toNativeType: () => "Bluegrass",
  },
  {
    id: "outlaw_country",
    name: "Outlaw Country",
    type: "subgenre",
    parentId: "country",
    toNativeType: () => "OutlawCountry",
  },
  {
    id: "alt_country",
    name: "Alt‑Country",
    type: "subgenre",
    parentId: "country",
    toNativeType: () => "AltCountry",
  },
  {
    id: "contemporary_country",
    name: "Contemporary Country",
    type: "subgenre",
    parentId: "country",
    toNativeType: () => "ContemporaryCountry",
  },
  {
    id: "country_pop",
    name: "Country Pop",
    type: "subgenre",
    parentId: "country",
    toNativeType: () => "CountryPop",
  },
  {
    id: "honky_tonk",
    name: "Honky‑Tonk",
    type: "subgenre",
    parentId: "country",
    toNativeType: () => "HonkyTonk",
  },
  {
    id: "latin",
    name: "Latin",
    type: "genre",
    toNativeType: () => "Latin",
  },
  {
    id: "reggaeton",
    name: "Reggaeton",
    type: "subgenre",
    parentId: "latin",
    toNativeType: () => "Reggaeton",
  },
  {
    id: "salsa",
    name: "Salsa",
    type: "subgenre",
    parentId: "latin",
    toNativeType: () => "Salsa",
  },
  {
    id: "bachata",
    name: "Bachata",
    type: "subgenre",
    parentId: "latin",
    toNativeType: () => "Bachata",
  },
  {
    id: "latin_rock",
    name: "Latin Rock",
    type: "subgenre",
    parentId: "latin",
    toNativeType: () => "LatinRock",
  },
  {
    id: "cumbia",
    name: "Cumbia",
    type: "subgenre",
    parentId: "latin",
    toNativeType: () => "Cumbia",
  },
  {
    id: "merengue",
    name: "Merengue",
    type: "subgenre",
    parentId: "latin",
    toNativeType: () => "Merengue",
  },
  {
    id: "tango",
    name: "Tango",
    type: "subgenre",
    parentId: "latin",
    toNativeType: () => "Tango",
  },
  {
    id: "reggae",
    name: "Reggae",
    type: "genre",
    toNativeType: () => "Reggae",
  },
  {
    id: "roots_reggae",
    name: "Roots Reggae",
    type: "subgenre",
    parentId: "reggae",
    toNativeType: () => "RootsReggae",
  },
  {
    id: "dancehall",
    name: "Dancehall",
    type: "subgenre",
    parentId: "reggae",
    toNativeType: () => "Dancehall",
  },
  {
    id: "dub",
    name: "Dub",
    type: "subgenre",
    parentId: "reggae",
    toNativeType: () => "Dub",
  },
  {
    id: "ska",
    name: "Ska",
    type: "subgenre",
    parentId: "reggae",
    toNativeType: () => "Ska",
  },
  {
    id: "rocksteady",
    name: "Rocksteady",
    type: "subgenre",
    parentId: "reggae",
    toNativeType: () => "Rocksteady",
  },
  {
    id: "metal",
    name: "Metal",
    type: "genre",
    toNativeType: () => "Metal",
  },
  {
    id: "heavy_metal",
    name: "Heavy Metal",
    type: "subgenre",
    parentId: "metal",
    toNativeType: () => "HeavyMetal",
  },
  {
    id: "thrash_metal",
    name: "Thrash Metal",
    type: "subgenre",
    parentId: "metal",
    toNativeType: () => "ThrashMetal",
  },
  {
    id: "death_metal",
    name: "Death Metal",
    type: "subgenre",
    parentId: "metal",
    toNativeType: () => "DeathMetal",
  },
  {
    id: "black_metal",
    name: "Black Metal",
    type: "subgenre",
    parentId: "metal",
    toNativeType: () => "BlackMetal",
  },
  {
    id: "doom_metal",
    name: "Doom Metal",
    type: "subgenre",
    parentId: "metal",
    toNativeType: () => "DoomMetal",
  },
  {
    id: "power_metal",
    name: "Power Metal",
    type: "subgenre",
    parentId: "metal",
    toNativeType: () => "PowerMetal",
  },
  {
    id: "metalcore",
    name: "Metalcore",
    type: "subgenre",
    parentId: "metal",
    toNativeType: () => "Metalcore",
  },
  {
    id: "symphonic_metal",
    name: "Symphonic Metal",
    type: "subgenre",
    parentId: "metal",
    toNativeType: () => "SymphonicMetal",
  },
  {
    id: "progressive_metal",
    name: "Progressive Metal",
    type: "subgenre",
    parentId: "metal",
    toNativeType: () => "ProgressiveMetal",
  },
  {
    id: "folk",
    name: "Folk",
    type: "genre",
    toNativeType: () => "Folk",
  },
  {
    id: "folk_rock",
    name: "Folk Rock",
    type: "subgenre",
    parentId: "folk",
    toNativeType: () => "FolkRock",
  },
  {
    id: "traditional_folk",
    name: "Traditional Folk",
    type: "subgenre",
    parentId: "folk",
    toNativeType: () => "TraditionalFolk",
  },
  {
    id: "indie_folk",
    name: "Indie Folk",
    type: "subgenre",
    parentId: "folk",
    toNativeType: () => "IndieFolk",
  },
  {
    id: "progressive_folk",
    name: "Progressive Folk",
    type: "subgenre",
    parentId: "folk",
    toNativeType: () => "ProgressiveFolk",
  },
  {
    id: "world",
    name: "World",
    type: "genre",
    toNativeType: () => "World",
  },
  {
    id: "afrobeat",
    name: "Afrobeat",
    type: "subgenre",
    parentId: "world",
    toNativeType: () => "Afrobeat",
  },
  {
    id: "highlife",
    name: "Highlife",
    type: "subgenre",
    parentId: "world",
    toNativeType: () => "Highlife",
  },
  {
    id: "brazilian",
    name: "Brazilian",
    type: "subgenre",
    parentId: "world",
    toNativeType: () => "Brazilian",
  },
  {
    id: "flamenco",
    name: "Flamenco",
    type: "subgenre",
    parentId: "world",
    toNativeType: () => "Flamenco",
  },
  {
    id: "celtic",
    name: "Celtic",
    type: "subgenre",
    parentId: "world",
    toNativeType: () => "Celtic",
  },
  {
    id: "bharatnatyam",
    name: "Bharatnatyam",
    type: "subgenre",
    parentId: "world",
    toNativeType: () => "Bharatnatyam",
  },
  {
    id: "gamelan",
    name: "Gamelan",
    type: "subgenre",
    parentId: "world",
    toNativeType: () => "Gamelan",
  },
  {
    id: "fado",
    name: "Fado",
    type: "subgenre",
    parentId: "world",
    toNativeType: () => "Fado",
  },
  {
    id: "soundtrack",
    name: "Soundtrack / Score",
    type: "genre",
    toNativeType: () => "Soundtrack",
  },
  {
    id: "film_score",
    name: "Film Score",
    type: "subgenre",
    parentId: "soundtrack",
    toNativeType: () => "FilmScore",
  },
  {
    id: "video_game_music",
    name: "Video Game Music",
    type: "subgenre",
    parentId: "soundtrack",
    toNativeType: () => "VideoGameMusic",
  },
  {
    id: "musical_soundtrack",
    name: "Musical Soundtrack",
    type: "subgenre",
    parentId: "soundtrack",
    toNativeType: () => "MusicalSoundtrack",
  },
  {
    id: "television_score",
    name: "Television Score",
    type: "subgenre",
    parentId: "soundtrack",
    toNativeType: () => "TelevisionScore",
  },
  {
    id: "experimental",
    name: "Experimental / Avant‑Garde",
    type: "genre",
    toNativeType: () => "Experimental",
  },
  {
    id: "noise",
    name: "Noise",
    type: "subgenre",
    parentId: "experimental",
    toNativeType: () => "Noise",
  },
  {
    id: "musique_concrete",
    name: "Musique Concrète",
    type: "subgenre",
    parentId: "experimental",
    toNativeType: () => "MusiqueConcrete",
  },
  {
    id: "glitch",
    name: "Glitch",
    type: "subgenre",
    parentId: "experimental",
    toNativeType: () => "Glitch",
  },
  {
    id: "minimalism",
    name: "Minimalism",
    type: "subgenre",
    parentId: "experimental",
    toNativeType: () => "Minimalism",
  },
  {
    id: "electroacoustic_experimental",
    name: "Electroacoustic",
    type: "subgenre",
    parentId: "experimental",
    toNativeType: () => "ElectroacousticExperimental",
  },
  {
    id: "punk",
    name: "Punk",
    type: "genre",
    toNativeType: () => "Punk",
  },
  {
    id: "hardcore_punk",
    name: "Hardcore Punk",
    type: "subgenre",
    parentId: "punk",
    toNativeType: () => "HardcorePunk",
  },
  {
    id: "post_punk",
    name: "Post‑Punk",
    type: "subgenre",
    parentId: "punk",
    toNativeType: () => "PostPunk",
  },
  {
    id: "ska_punk",
    name: "Ska Punk",
    type: "subgenre",
    parentId: "punk",
    toNativeType: () => "SkaPunk",
  },
  {
    id: "crust_punk",
    name: "Crust Punk",
    type: "subgenre",
    parentId: "punk",
    toNativeType: () => "CrustPunk",
  },
  {
    id: "gospel_christian",
    name: "Gospel / Christian",
    type: "genre",
    toNativeType: () => "GospelChristian",
  },
  {
    id: "gospel",
    name: "Gospel",
    type: "subgenre",
    parentId: "gospel_christian",
    toNativeType: () => "Gospel",
  },
  {
    id: "contemporary_christian",
    name: "Contemporary Christian",
    type: "subgenre",
    parentId: "gospel_christian",
    toNativeType: () => "ContemporaryChristian",
  },
  {
    id: "christian_rock",
    name: "Christian Rock",
    type: "subgenre",
    parentId: "gospel_christian",
    toNativeType: () => "ChristianRock",
  },
  {
    id: "blues",
    name: "Blues",
    type: "genre",
    toNativeType: () => "Blues",
  },
  {
    id: "delta_blues",
    name: "Delta Blues",
    type: "subgenre",
    parentId: "blues",
    toNativeType: () => "DeltaBlues",
  },
  {
    id: "electric_blues",
    name: "Electric Blues",
    type: "subgenre",
    parentId: "blues",
    toNativeType: () => "ElectricBlues",
  },
  {
    id: "urban_blues",
    name: "Urban Blues",
    type: "subgenre",
    parentId: "blues",
    toNativeType: () => "UrbanBlues",
  },
  {
    id: "blues_rock",
    name: "Blues Rock",
    type: "subgenre",
    parentId: "blues",
    toNativeType: () => "BluesRock",
  },
  {
    id: "ambient",
    name: "Ambient",
    type: "genre",
    toNativeType: () => "Ambient",
  },
  {
    id: "dark_ambient",
    name: "Dark Ambient",
    type: "subgenre",
    parentId: "ambient",
    toNativeType: () => "DarkAmbient",
  },
  {
    id: "space_ambient",
    name: "Space Ambient",
    type: "subgenre",
    parentId: "ambient",
    toNativeType: () => "SpaceAmbient",
  },
  {
    id: "ambient_new_age",
    name: "New Age",
    type: "subgenre",
    parentId: "ambient",
    toNativeType: () => "AmbientNewAge",
  },
  {
    id: "new_age",
    name: "New Age",
    type: "genre",
    toNativeType: () => "NewAge",
  },
  {
    id: "meditation",
    name: "Meditation",
    type: "subgenre",
    parentId: "new_age",
    toNativeType: () => "Meditation",
  },
  {
    id: "relaxation",
    name: "Relaxation",
    type: "subgenre",
    parentId: "new_age",
    toNativeType: () => "Relaxation",
  },
  {
    id: "healing",
    name: "Healing",
    type: "subgenre",
    parentId: "new_age",
    toNativeType: () => "Healing",
  },
];

/**
 * Retrieve the display name of a genre or subgenre by its ID.
 */
export function getGenreName(id: string): string | null {
  const entry = allGenresUnified.find((g) => g.id === id);
  return entry ? entry.name : null;
}

/**
 * Check if the given ID corresponds to a valid genre or subgenre.
 */
export function isValidGenreId(id: string): boolean {
  return allGenresUnified.some((g) => g.id === id);
}

/**
 * Get all subgenres of a given genre ID.
 */
export function getSubgenresOf(parentId: string): UnifiedGenreEntry[] {
  return allGenresUnified.filter((g) => g.parentId === parentId);
}

/**
 * Get only the top-level genres (excluding subgenres).
 */
export function getGenres(): UnifiedGenreEntry[] {
  return allGenresUnified.filter((g) => g.type === "genre");
}
