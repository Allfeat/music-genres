// This file is part of Allfeat.

// Copyright (C) 2022-2025 Allfeat.
// SPDX-License-Identifier: GPL-3.0-or-later

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>.
// AUTO-GENERATED FILE. DO NOT EDIT MANUALLY.

use crate::GenreId;

/// Auto-generated function to get all genre entries
pub(crate) fn get_all_genre_entries_generated() -> Vec<super::GenreEntry> {
    vec![
        super::GenreEntry {
            id: "rock".to_string(),
            name: "Rock".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::Rock,
        },
        super::GenreEntry {
            id: "hard_rock".to_string(),
            name: "Hard Rock".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("rock".to_string()),
            genre_id: GenreId::HardRock,
        },
        super::GenreEntry {
            id: "classic_rock".to_string(),
            name: "Classic Rock".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("rock".to_string()),
            genre_id: GenreId::ClassicRock,
        },
        super::GenreEntry {
            id: "punk_rock".to_string(),
            name: "Punk Rock".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("rock".to_string()),
            genre_id: GenreId::PunkRock,
        },
        super::GenreEntry {
            id: "alternative_rock".to_string(),
            name: "Alternative Rock".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("rock".to_string()),
            genre_id: GenreId::AlternativeRock,
        },
        super::GenreEntry {
            id: "indie_rock".to_string(),
            name: "Indie Rock".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("rock".to_string()),
            genre_id: GenreId::IndieRock,
        },
        super::GenreEntry {
            id: "progressive_rock".to_string(),
            name: "Progressive Rock".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("rock".to_string()),
            genre_id: GenreId::ProgressiveRock,
        },
        super::GenreEntry {
            id: "garage_rock".to_string(),
            name: "Garage Rock".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("rock".to_string()),
            genre_id: GenreId::GarageRock,
        },
        super::GenreEntry {
            id: "post_rock".to_string(),
            name: "Post‑Rock".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("rock".to_string()),
            genre_id: GenreId::PostRock,
        },
        super::GenreEntry {
            id: "math_rock".to_string(),
            name: "Math Rock".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("rock".to_string()),
            genre_id: GenreId::MathRock,
        },
        super::GenreEntry {
            id: "grunge".to_string(),
            name: "Grunge".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("rock".to_string()),
            genre_id: GenreId::Grunge,
        },
        super::GenreEntry {
            id: "pop".to_string(),
            name: "Pop".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::Pop,
        },
        super::GenreEntry {
            id: "dance_pop".to_string(),
            name: "Dance Pop".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("pop".to_string()),
            genre_id: GenreId::DancePop,
        },
        super::GenreEntry {
            id: "electropop".to_string(),
            name: "Electropop".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("pop".to_string()),
            genre_id: GenreId::Electropop,
        },
        super::GenreEntry {
            id: "synthpop".to_string(),
            name: "Synth‑pop".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("pop".to_string()),
            genre_id: GenreId::Synthpop,
        },
        super::GenreEntry {
            id: "teen_pop".to_string(),
            name: "Teen Pop".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("pop".to_string()),
            genre_id: GenreId::TeenPop,
        },
        super::GenreEntry {
            id: "k_pop".to_string(),
            name: "K‑Pop".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("pop".to_string()),
            genre_id: GenreId::KPop,
        },
        super::GenreEntry {
            id: "baroque_pop".to_string(),
            name: "Baroque Pop".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("pop".to_string()),
            genre_id: GenreId::BaroquePop,
        },
        super::GenreEntry {
            id: "art_pop".to_string(),
            name: "Art Pop".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("pop".to_string()),
            genre_id: GenreId::ArtPop,
        },
        super::GenreEntry {
            id: "hip_hop".to_string(),
            name: "Hip Hop / Rap".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::HipHop,
        },
        super::GenreEntry {
            id: "trap".to_string(),
            name: "Trap".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("hip_hop".to_string()),
            genre_id: GenreId::Trap,
        },
        super::GenreEntry {
            id: "boom_bap".to_string(),
            name: "Boom Bap".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("hip_hop".to_string()),
            genre_id: GenreId::BoomBap,
        },
        super::GenreEntry {
            id: "gangsta_rap".to_string(),
            name: "Gangsta Rap".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("hip_hop".to_string()),
            genre_id: GenreId::GangstaRap,
        },
        super::GenreEntry {
            id: "conscious_rap".to_string(),
            name: "Conscious Rap".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("hip_hop".to_string()),
            genre_id: GenreId::ConsciousRap,
        },
        super::GenreEntry {
            id: "lofi_hip_hop".to_string(),
            name: "Lo‑fi Hip Hop".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("hip_hop".to_string()),
            genre_id: GenreId::LofiHipHop,
        },
        super::GenreEntry {
            id: "drill".to_string(),
            name: "Drill".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("hip_hop".to_string()),
            genre_id: GenreId::Drill,
        },
        super::GenreEntry {
            id: "cloud_rap".to_string(),
            name: "Cloud Rap".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("hip_hop".to_string()),
            genre_id: GenreId::CloudRap,
        },
        super::GenreEntry {
            id: "experimental_hip_hop".to_string(),
            name: "Experimental Hip Hop".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("hip_hop".to_string()),
            genre_id: GenreId::ExperimentalHipHop,
        },
        super::GenreEntry {
            id: "electronic".to_string(),
            name: "Electronic".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::Electronic,
        },
        super::GenreEntry {
            id: "house".to_string(),
            name: "House".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("electronic".to_string()),
            genre_id: GenreId::House,
        },
        super::GenreEntry {
            id: "techno".to_string(),
            name: "Techno".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("electronic".to_string()),
            genre_id: GenreId::Techno,
        },
        super::GenreEntry {
            id: "trance".to_string(),
            name: "Trance".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("electronic".to_string()),
            genre_id: GenreId::Trance,
        },
        super::GenreEntry {
            id: "dubstep".to_string(),
            name: "Dubstep".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("electronic".to_string()),
            genre_id: GenreId::Dubstep,
        },
        super::GenreEntry {
            id: "drum_and_bass".to_string(),
            name: "Drum & Bass".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("electronic".to_string()),
            genre_id: GenreId::DrumAndBass,
        },
        super::GenreEntry {
            id: "electronic_ambient".to_string(),
            name: "Ambient".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("electronic".to_string()),
            genre_id: GenreId::ElectronicAmbient,
        },
        super::GenreEntry {
            id: "idm".to_string(),
            name: "IDM".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("electronic".to_string()),
            genre_id: GenreId::Idm,
        },
        super::GenreEntry {
            id: "electro".to_string(),
            name: "Electro".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("electronic".to_string()),
            genre_id: GenreId::Electro,
        },
        super::GenreEntry {
            id: "downtempo".to_string(),
            name: "Downtempo".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("electronic".to_string()),
            genre_id: GenreId::Downtempo,
        },
        super::GenreEntry {
            id: "breakbeat".to_string(),
            name: "Breakbeat".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("electronic".to_string()),
            genre_id: GenreId::Breakbeat,
        },
        super::GenreEntry {
            id: "hardstyle".to_string(),
            name: "Hardstyle".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("electronic".to_string()),
            genre_id: GenreId::Hardstyle,
        },
        super::GenreEntry {
            id: "triphop".to_string(),
            name: "Trip‑Hop".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("electronic".to_string()),
            genre_id: GenreId::Triphop,
        },
        super::GenreEntry {
            id: "r_and_b".to_string(),
            name: "R&B / Soul".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::RAndB,
        },
        super::GenreEntry {
            id: "contemporary_r_and_b".to_string(),
            name: "Contemporary R&B".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("r_and_b".to_string()),
            genre_id: GenreId::ContemporaryRAndB,
        },
        super::GenreEntry {
            id: "neo_soul".to_string(),
            name: "Neo‑Soul".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("r_and_b".to_string()),
            genre_id: GenreId::NeoSoul,
        },
        super::GenreEntry {
            id: "motown".to_string(),
            name: "Motown".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("r_and_b".to_string()),
            genre_id: GenreId::Motown,
        },
        super::GenreEntry {
            id: "funk".to_string(),
            name: "Funk".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("r_and_b".to_string()),
            genre_id: GenreId::Funk,
        },
        super::GenreEntry {
            id: "quiet_storm".to_string(),
            name: "Quiet Storm".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("r_and_b".to_string()),
            genre_id: GenreId::QuietStorm,
        },
        super::GenreEntry {
            id: "blue_eyed_soul".to_string(),
            name: "Blue‑Eyed Soul".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("r_and_b".to_string()),
            genre_id: GenreId::BlueEyedSoul,
        },
        super::GenreEntry {
            id: "jazz".to_string(),
            name: "Jazz".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::Jazz,
        },
        super::GenreEntry {
            id: "bebop".to_string(),
            name: "Bebop".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("jazz".to_string()),
            genre_id: GenreId::Bebop,
        },
        super::GenreEntry {
            id: "swing".to_string(),
            name: "Swing".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("jazz".to_string()),
            genre_id: GenreId::Swing,
        },
        super::GenreEntry {
            id: "cool_jazz".to_string(),
            name: "Cool Jazz".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("jazz".to_string()),
            genre_id: GenreId::CoolJazz,
        },
        super::GenreEntry {
            id: "fusion".to_string(),
            name: "Jazz Fusion".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("jazz".to_string()),
            genre_id: GenreId::Fusion,
        },
        super::GenreEntry {
            id: "acid_jazz".to_string(),
            name: "Acid Jazz".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("jazz".to_string()),
            genre_id: GenreId::AcidJazz,
        },
        super::GenreEntry {
            id: "latin_jazz".to_string(),
            name: "Latin Jazz".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("jazz".to_string()),
            genre_id: GenreId::LatinJazz,
        },
        super::GenreEntry {
            id: "vocal_jazz".to_string(),
            name: "Vocal Jazz".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("jazz".to_string()),
            genre_id: GenreId::VocalJazz,
        },
        super::GenreEntry {
            id: "classical".to_string(),
            name: "Classical".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::Classical,
        },
        super::GenreEntry {
            id: "baroque".to_string(),
            name: "Baroque".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("classical".to_string()),
            genre_id: GenreId::Baroque,
        },
        super::GenreEntry {
            id: "classical_period".to_string(),
            name: "Classical Period".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("classical".to_string()),
            genre_id: GenreId::ClassicalPeriod,
        },
        super::GenreEntry {
            id: "romantic".to_string(),
            name: "Romantic".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("classical".to_string()),
            genre_id: GenreId::Romantic,
        },
        super::GenreEntry {
            id: "contemporary_classical".to_string(),
            name: "Contemporary Classical".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("classical".to_string()),
            genre_id: GenreId::ContemporaryClassical,
        },
        super::GenreEntry {
            id: "opera".to_string(),
            name: "Opera".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("classical".to_string()),
            genre_id: GenreId::Opera,
        },
        super::GenreEntry {
            id: "chamber_music".to_string(),
            name: "Chamber Music".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("classical".to_string()),
            genre_id: GenreId::ChamberMusic,
        },
        super::GenreEntry {
            id: "electroacoustic".to_string(),
            name: "Electroacoustic".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("classical".to_string()),
            genre_id: GenreId::Electroacoustic,
        },
        super::GenreEntry {
            id: "country".to_string(),
            name: "Country".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::Country,
        },
        super::GenreEntry {
            id: "bluegrass".to_string(),
            name: "Bluegrass".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("country".to_string()),
            genre_id: GenreId::Bluegrass,
        },
        super::GenreEntry {
            id: "outlaw_country".to_string(),
            name: "Outlaw Country".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("country".to_string()),
            genre_id: GenreId::OutlawCountry,
        },
        super::GenreEntry {
            id: "alt_country".to_string(),
            name: "Alt‑Country".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("country".to_string()),
            genre_id: GenreId::AltCountry,
        },
        super::GenreEntry {
            id: "contemporary_country".to_string(),
            name: "Contemporary Country".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("country".to_string()),
            genre_id: GenreId::ContemporaryCountry,
        },
        super::GenreEntry {
            id: "country_pop".to_string(),
            name: "Country Pop".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("country".to_string()),
            genre_id: GenreId::CountryPop,
        },
        super::GenreEntry {
            id: "honky_tonk".to_string(),
            name: "Honky‑Tonk".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("country".to_string()),
            genre_id: GenreId::HonkyTonk,
        },
        super::GenreEntry {
            id: "latin".to_string(),
            name: "Latin".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::Latin,
        },
        super::GenreEntry {
            id: "reggaeton".to_string(),
            name: "Reggaeton".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("latin".to_string()),
            genre_id: GenreId::Reggaeton,
        },
        super::GenreEntry {
            id: "salsa".to_string(),
            name: "Salsa".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("latin".to_string()),
            genre_id: GenreId::Salsa,
        },
        super::GenreEntry {
            id: "bachata".to_string(),
            name: "Bachata".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("latin".to_string()),
            genre_id: GenreId::Bachata,
        },
        super::GenreEntry {
            id: "latin_rock".to_string(),
            name: "Latin Rock".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("latin".to_string()),
            genre_id: GenreId::LatinRock,
        },
        super::GenreEntry {
            id: "cumbia".to_string(),
            name: "Cumbia".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("latin".to_string()),
            genre_id: GenreId::Cumbia,
        },
        super::GenreEntry {
            id: "merengue".to_string(),
            name: "Merengue".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("latin".to_string()),
            genre_id: GenreId::Merengue,
        },
        super::GenreEntry {
            id: "tango".to_string(),
            name: "Tango".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("latin".to_string()),
            genre_id: GenreId::Tango,
        },
        super::GenreEntry {
            id: "reggae".to_string(),
            name: "Reggae".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::Reggae,
        },
        super::GenreEntry {
            id: "roots_reggae".to_string(),
            name: "Roots Reggae".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("reggae".to_string()),
            genre_id: GenreId::RootsReggae,
        },
        super::GenreEntry {
            id: "dancehall".to_string(),
            name: "Dancehall".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("reggae".to_string()),
            genre_id: GenreId::Dancehall,
        },
        super::GenreEntry {
            id: "dub".to_string(),
            name: "Dub".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("reggae".to_string()),
            genre_id: GenreId::Dub,
        },
        super::GenreEntry {
            id: "ska".to_string(),
            name: "Ska".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("reggae".to_string()),
            genre_id: GenreId::Ska,
        },
        super::GenreEntry {
            id: "rocksteady".to_string(),
            name: "Rocksteady".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("reggae".to_string()),
            genre_id: GenreId::Rocksteady,
        },
        super::GenreEntry {
            id: "metal".to_string(),
            name: "Metal".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::Metal,
        },
        super::GenreEntry {
            id: "heavy_metal".to_string(),
            name: "Heavy Metal".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("metal".to_string()),
            genre_id: GenreId::HeavyMetal,
        },
        super::GenreEntry {
            id: "thrash_metal".to_string(),
            name: "Thrash Metal".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("metal".to_string()),
            genre_id: GenreId::ThrashMetal,
        },
        super::GenreEntry {
            id: "death_metal".to_string(),
            name: "Death Metal".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("metal".to_string()),
            genre_id: GenreId::DeathMetal,
        },
        super::GenreEntry {
            id: "black_metal".to_string(),
            name: "Black Metal".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("metal".to_string()),
            genre_id: GenreId::BlackMetal,
        },
        super::GenreEntry {
            id: "doom_metal".to_string(),
            name: "Doom Metal".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("metal".to_string()),
            genre_id: GenreId::DoomMetal,
        },
        super::GenreEntry {
            id: "power_metal".to_string(),
            name: "Power Metal".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("metal".to_string()),
            genre_id: GenreId::PowerMetal,
        },
        super::GenreEntry {
            id: "metalcore".to_string(),
            name: "Metalcore".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("metal".to_string()),
            genre_id: GenreId::Metalcore,
        },
        super::GenreEntry {
            id: "symphonic_metal".to_string(),
            name: "Symphonic Metal".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("metal".to_string()),
            genre_id: GenreId::SymphonicMetal,
        },
        super::GenreEntry {
            id: "progressive_metal".to_string(),
            name: "Progressive Metal".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("metal".to_string()),
            genre_id: GenreId::ProgressiveMetal,
        },
        super::GenreEntry {
            id: "folk".to_string(),
            name: "Folk".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::Folk,
        },
        super::GenreEntry {
            id: "folk_rock".to_string(),
            name: "Folk Rock".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("folk".to_string()),
            genre_id: GenreId::FolkRock,
        },
        super::GenreEntry {
            id: "traditional_folk".to_string(),
            name: "Traditional Folk".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("folk".to_string()),
            genre_id: GenreId::TraditionalFolk,
        },
        super::GenreEntry {
            id: "indie_folk".to_string(),
            name: "Indie Folk".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("folk".to_string()),
            genre_id: GenreId::IndieFolk,
        },
        super::GenreEntry {
            id: "progressive_folk".to_string(),
            name: "Progressive Folk".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("folk".to_string()),
            genre_id: GenreId::ProgressiveFolk,
        },
        super::GenreEntry {
            id: "world".to_string(),
            name: "World".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::World,
        },
        super::GenreEntry {
            id: "afrobeat".to_string(),
            name: "Afrobeat".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("world".to_string()),
            genre_id: GenreId::Afrobeat,
        },
        super::GenreEntry {
            id: "highlife".to_string(),
            name: "Highlife".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("world".to_string()),
            genre_id: GenreId::Highlife,
        },
        super::GenreEntry {
            id: "brazilian".to_string(),
            name: "Brazilian".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("world".to_string()),
            genre_id: GenreId::Brazilian,
        },
        super::GenreEntry {
            id: "flamenco".to_string(),
            name: "Flamenco".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("world".to_string()),
            genre_id: GenreId::Flamenco,
        },
        super::GenreEntry {
            id: "celtic".to_string(),
            name: "Celtic".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("world".to_string()),
            genre_id: GenreId::Celtic,
        },
        super::GenreEntry {
            id: "bharatnatyam".to_string(),
            name: "Bharatnatyam".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("world".to_string()),
            genre_id: GenreId::Bharatnatyam,
        },
        super::GenreEntry {
            id: "gamelan".to_string(),
            name: "Gamelan".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("world".to_string()),
            genre_id: GenreId::Gamelan,
        },
        super::GenreEntry {
            id: "fado".to_string(),
            name: "Fado".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("world".to_string()),
            genre_id: GenreId::Fado,
        },
        super::GenreEntry {
            id: "soundtrack".to_string(),
            name: "Soundtrack / Score".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::Soundtrack,
        },
        super::GenreEntry {
            id: "film_score".to_string(),
            name: "Film Score".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("soundtrack".to_string()),
            genre_id: GenreId::FilmScore,
        },
        super::GenreEntry {
            id: "video_game_music".to_string(),
            name: "Video Game Music".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("soundtrack".to_string()),
            genre_id: GenreId::VideoGameMusic,
        },
        super::GenreEntry {
            id: "musical_soundtrack".to_string(),
            name: "Musical Soundtrack".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("soundtrack".to_string()),
            genre_id: GenreId::MusicalSoundtrack,
        },
        super::GenreEntry {
            id: "television_score".to_string(),
            name: "Television Score".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("soundtrack".to_string()),
            genre_id: GenreId::TelevisionScore,
        },
        super::GenreEntry {
            id: "experimental".to_string(),
            name: "Experimental / Avant‑Garde".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::Experimental,
        },
        super::GenreEntry {
            id: "noise".to_string(),
            name: "Noise".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("experimental".to_string()),
            genre_id: GenreId::Noise,
        },
        super::GenreEntry {
            id: "musique_concrete".to_string(),
            name: "Musique Concrète".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("experimental".to_string()),
            genre_id: GenreId::MusiqueConcrete,
        },
        super::GenreEntry {
            id: "glitch".to_string(),
            name: "Glitch".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("experimental".to_string()),
            genre_id: GenreId::Glitch,
        },
        super::GenreEntry {
            id: "minimalism".to_string(),
            name: "Minimalism".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("experimental".to_string()),
            genre_id: GenreId::Minimalism,
        },
        super::GenreEntry {
            id: "electroacoustic_experimental".to_string(),
            name: "Electroacoustic".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("experimental".to_string()),
            genre_id: GenreId::ElectroacousticExperimental,
        },
        super::GenreEntry {
            id: "punk".to_string(),
            name: "Punk".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::Punk,
        },
        super::GenreEntry {
            id: "hardcore_punk".to_string(),
            name: "Hardcore Punk".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("punk".to_string()),
            genre_id: GenreId::HardcorePunk,
        },
        super::GenreEntry {
            id: "post_punk".to_string(),
            name: "Post‑Punk".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("punk".to_string()),
            genre_id: GenreId::PostPunk,
        },
        super::GenreEntry {
            id: "ska_punk".to_string(),
            name: "Ska Punk".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("punk".to_string()),
            genre_id: GenreId::SkaPunk,
        },
        super::GenreEntry {
            id: "crust_punk".to_string(),
            name: "Crust Punk".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("punk".to_string()),
            genre_id: GenreId::CrustPunk,
        },
        super::GenreEntry {
            id: "gospel_christian".to_string(),
            name: "Gospel / Christian".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::GospelChristian,
        },
        super::GenreEntry {
            id: "gospel".to_string(),
            name: "Gospel".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("gospel_christian".to_string()),
            genre_id: GenreId::Gospel,
        },
        super::GenreEntry {
            id: "contemporary_christian".to_string(),
            name: "Contemporary Christian".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("gospel_christian".to_string()),
            genre_id: GenreId::ContemporaryChristian,
        },
        super::GenreEntry {
            id: "christian_rock".to_string(),
            name: "Christian Rock".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("gospel_christian".to_string()),
            genre_id: GenreId::ChristianRock,
        },
        super::GenreEntry {
            id: "blues".to_string(),
            name: "Blues".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::Blues,
        },
        super::GenreEntry {
            id: "delta_blues".to_string(),
            name: "Delta Blues".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("blues".to_string()),
            genre_id: GenreId::DeltaBlues,
        },
        super::GenreEntry {
            id: "electric_blues".to_string(),
            name: "Electric Blues".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("blues".to_string()),
            genre_id: GenreId::ElectricBlues,
        },
        super::GenreEntry {
            id: "urban_blues".to_string(),
            name: "Urban Blues".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("blues".to_string()),
            genre_id: GenreId::UrbanBlues,
        },
        super::GenreEntry {
            id: "blues_rock".to_string(),
            name: "Blues Rock".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("blues".to_string()),
            genre_id: GenreId::BluesRock,
        },
        super::GenreEntry {
            id: "ambient".to_string(),
            name: "Ambient".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::Ambient,
        },
        super::GenreEntry {
            id: "dark_ambient".to_string(),
            name: "Dark Ambient".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("ambient".to_string()),
            genre_id: GenreId::DarkAmbient,
        },
        super::GenreEntry {
            id: "space_ambient".to_string(),
            name: "Space Ambient".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("ambient".to_string()),
            genre_id: GenreId::SpaceAmbient,
        },
        super::GenreEntry {
            id: "ambient_new_age".to_string(),
            name: "New Age".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("ambient".to_string()),
            genre_id: GenreId::AmbientNewAge,
        },
        super::GenreEntry {
            id: "new_age".to_string(),
            name: "New Age".to_string(),
            genre_type: super::GenreType::Genre,
            parent_id: None,
            genre_id: GenreId::NewAge,
        },
        super::GenreEntry {
            id: "meditation".to_string(),
            name: "Meditation".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("new_age".to_string()),
            genre_id: GenreId::Meditation,
        },
        super::GenreEntry {
            id: "relaxation".to_string(),
            name: "Relaxation".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("new_age".to_string()),
            genre_id: GenreId::Relaxation,
        },
        super::GenreEntry {
            id: "healing".to_string(),
            name: "Healing".to_string(),
            genre_type: super::GenreType::Subgenre,
            parent_id: Some("new_age".to_string()),
            genre_id: GenreId::Healing,
        },
    ]
}